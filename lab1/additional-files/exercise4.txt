Exercise 4
----------

Q1: Identify the exact assembly instructions that correspond to each of the
statements in readsect().

-> Comando do bochs para 'desassemblar' a função readsect():

	u /43 0x00007c81

   Obviamente que para esse comando funcionar, o código do bootloader tem que
   ter sido carregado na memória (isso é feito pela BIOS).

-> Resposta completa abaixo, note os seguintes detalhes:

 1. A função waitdisk() foi colocada inline pelo GCC
 2. outb() e insl() são inlines, definidas em inc/x86.h
 3. O GCC fez outras otimizações além de 'inlinear' waitdisk(). Por exemplo,
    os parametros da função readsect() foram carregados em registradores
    ('offset' em ECX e 'dst' em EDI); os bits mais significativos do parâmetro
    'port' para outb() é carregado apenas uma vez para todas operações
    (primeira linha de waitdisk())...

waitdisk():
00007c8b: (                    ): mov edx, 0x000001f7       ; baf7010000
00007c90: (                    ): in al, dx                 ; ec
00007c91: (                    ): and eax, 0x000000c0       ; 25c0000000
00007c96: (                    ): cmp eax, 0x00000040       ; 83f840
00007c99: (                    ): jnz .+0xfffffff0          ; 75f0

outb(0x1F2, 1);         // count = 1
00007c9b: (                    ): mov al, 0x01              ; b001
00007c9d: (                    ): mov dl, 0xf2              ; b2f2
00007c9f: (                    ): out dx, al                ; ee

outb(0x1F3, offset);
00007ca0: (                    ): movzx eax, cl             ; 0fb6c1
00007ca3: (                    ): mov dl, 0xf3              ; b2f3
00007ca5: (                    ): out dx, al                ; ee

outb(0x1F4, offset >> 8);
00007ca6: (                    ): movzx eax, ch             ; 0fb6c5
00007ca9: (                    ): mov dl, 0xf4              ; b2f4
00007cab: (                    ): out dx, al                ; ee

outb(0x1F5, offset >> 16);
00007cac: (                    ): shr ecx, 0x10             ; c1e910
00007caf: (                    ): mov dl, 0xf5              ; b2f5
00007cb1: (                    ): movzx eax, cl             ; 0fb6c1
00007cb4: (                    ): out dx, al                ; ee

outb(0x1F6, (offset >> 24) | 0xE0);
00007cb5: (                    ): shr ecx, 0x08             ; c1e908
00007cb8: (                    ): mov dl, 0xf6              ; b2f6
00007cba: (                    ): or cl, 0xe0               ; 80c9e0
00007cbd: (                    ): mov al, cl                ; 88c8
00007cbf: (                    ): out dx, al                ; ee

outb(0x1F7, 0x20);      // cmd 0x20 - read sectors
00007cc0: (                    ): mov al, 0x20              ; b020
00007cc2: (                    ): mov dl, 0xf7              ; b2f7
00007cc4: (                    ): out dx, al                ; ee

waitdisk():
00007cc5: (                    ): mov edx, 0x000001f7       ; baf7010000
00007cca: (                    ): in al, dx                 ; ec
00007ccb: (                    ): and eax, 0x000000c0       ; 25c0000000
00007cd0: (                    ): cmp eax, 0x00000040       ; 83f840
00007cd3: (                    ): jnz .+0xfffffff0          ; 75f0

insl(0x1F0, dst, SECTSIZE/4);
00007cd5: (                    ): mov dl, 0xf0              ; b2f0
00007cd7: (                    ): mov ecx, 0x00000080       ; b980000000
00007cdc: (                    ): cld                       ; fc
00007cdd: (                    ): repne insd dword ptr es:[edi], dx ; f26d
