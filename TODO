Study
=====

o write a document to explain how the assembly code access and pass C structs
  to functions

o write a document to explain how copy-on-write fork works on JOS

o write a document to explain how JOS manages memory

Implementation
==============

o check how Linux (or any other open OS) handle the PDE's PTE_W flag
  (f83a2d0dc26edb504b26fdd8582dc50a73bbab02)

o sysenter support was implemented in 'lab3-sysenter-support' branch and is
  working (try grade script). It wasn't merged because it'll probably
  conflict with next labs' code and I don't want to spend time fixing
  rejections (src/sysenter-detect-linux.patch is interesting)

o some monitor's commands scan the whole free list to do their job, it's
  possible to do better

o trapentry.S and trap.c has a lot of duplicated code (see lab3 challenge
  at page 13)

o sfork() duplicates code from fork()

o extend monitor's kdb to do the following:
	- Disassemble support (see lab3 exercise 6's challenge)
	- Print function name, file name and file number
	- Backtrace support

o machine check exception support

o aligment check support

o lab4 and lab3 have some interesting challenges
